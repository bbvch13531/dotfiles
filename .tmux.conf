set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Change prefix C-b to C-q
set -g prefix C-q
unbind-key C-b

 set -g mouse on
# Make mouse useful in copy mode

# custom: copy-paste in vim, to clipboard
bind P paste-buffer

setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-selection

# Copy from tmux buffer to system clipboard using xclip
# bind -T vi-copy y copy-pipe "xclip -sel clip -i"
# bind -Tcopy-mode-vi y send -X copy-pipe "xclip -i -sel -i"

 bind -Tcopy-mode-vi y send -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c"
# Allow xterm titles in terminal window, terminal scrolling with scrollbar, and setting overrides of C-Up, C-Down, C-Left, C-Right
# (commented out because it disables cursor navigation in vim)
#set -g terminal-overrides "xterm*:XT:smcup@:rmcup@:kUP5=\eOA:kDN5=\eOB:kLFT5=\eOD:kRIT5=\eOC"

# Scroll History
set -g history-limit 30000

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 50

# Enable scroll
set-option -ga terminal-overrides ',xterm*:smcup@:rmcup@'

# tmux plugin manager
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# mouse release exit copymode off
# unbind -T copy-mode-vi MouseDragEnd1Pane

# Move window
bind-key 0 select-window -t :0
bind-key 1 select-window -t :1
bind-key 2 select-window -t :2
bind-key 3 select-window -t :3
bind-key 4 select-window -t :4
bind-key 5 select-window -t :5
bind-key 6 select-window -t :6
bind-key 7 select-window -t :7
bind-key 8 select-window -t :8
bind-key 9 select-window -t :9


# Status Bar

# Update status every 1 seconds
set-option -g status-interval 1

# No automatic renaming of windows (from commands on execution)
set-window-option -g automatic-rename off

# Set title, which is also showed at iTerm tab
# For special character sequences such as #S, refer to manual
set-option -g set-titles on
set-option -g set-titles-string '#S #I:#W (#h)' # session name, window index, window title, hostname

# Status Bar: auto-generated by tmuxline.vim
set -g status-justify "left"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=colour231,bg=colour31"
set -g status-right-style "none"
#set -g status-utf8 "on"
set -g status-style "bg=colour234,none"
set -g message-style "fg=colour231,bg=colour31"
set -g pane-border-style "fg=colour240"
set -g status-right-length "100"
set -g status-left-length "100"

TMUX_STATUS_BG="colour$PROMPT_HOST_COLOR"

setw -g window-status-activity-style "none"
setw -g window-status-activity-style "fg=colour250,bg=colour234,underscore"
setw -g window-status-separator ""
setw -g window-status-style "fg=colour250,bg=colour234,none"
set -g status-left "#[fg=colour16,bg=$TMUX_STATUS_BG,bold] #S #[fg=colour234,bg=$TMUX_STATUS_BG,nobold,nounderscore,noitalics]#[fg=$TMUX_STATUS_BG,bg=colour234] #h "
set -g status-right "#{prefix_highlight}#[fg=colour236,bg=colour234,nobold,nounderscore,noitalics]#[fg=colour247,bg=colour236] %Y-%m-%d  %H:%M #[fg=colour252,bg=colour236,nobold,nounderscore,noitalics]"
setw -g window-status-format "#[fg=colour31,bg=colour234] #I#F#[fg=colour250,bg=colour234] #W "
setw -g window-status-current-format "#[fg=colour234,bg=colour31,nobold,nounderscore,noitalics]#[fg=colour87,bg=colour31] #I#F#[fg=colour231,bg=colour31,bold] #W #{?pane_synchronized,#[fg=colour190](SYNC),} #[fg=colour31,bg=colour234,nobold,nounderscore,noitalics]"
#{prefix_highlight}

# window modes color (e.g. choosing window: <prefix>w / escape mode)
setw -g mode-style bg=colour31,fg=white

# pane border colors
set-option -g pane-border-style fg=colour240,bg=default   # inactive pane border: gray
set-option -g pane-active-border-style fg=green,bg=default  # active pane border: green

# Pane number and title shown on the border
set-option -g pane-border-status 'top'
set-option -g pane-border-format '(#{pane_index}) #{?pane_active,#[fg=colour156],}#T#F'

# (DISABLED) Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
#set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
#set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
#set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
#set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_panes} -gt 1 ]; then tmux set pane-border-status top; fi"'

# window notifications
set-window-option -g monitor-activity on
set-option -g visual-activity off          # no 'Activity in window <n>'

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
